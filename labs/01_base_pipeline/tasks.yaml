# Define a Tekton Task, which is a collection of steps to execute a specific part of your CI/CD process
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  # Name of the task - 'echo'
  name: echo
spec:
  # Define parameters that can be passed to the task
  params:
    - name: message
      description: The message to echo  # Description of the parameter
      type: string  # Type of the parameter
  # Define the steps to be executed in this task
  steps:
    - name: echo-message  # Name of the step
      image: alpine:3  # Docker image to use in this step
      command: [/bin/echo]  # The command to run in the container
      args: ["$(params.message)"]  # Arguments to the command, referencing the message parameter

---
# Define another Tekton Task for checking out code from a Git repository
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  # Name of the task - 'checkout'
  name: checkout
spec:
  # Define parameters that can be passed to the task
  params:
    - name: repo-url
      description: The URL of the git repo to clone  # Description of the parameter
      type: string  # Type of the parameter
    - name: branch
      description: The branch to clone  # Description of the parameter
      type: string  # Type of the parameter
  # Define the steps to be executed in this task
  steps:
    - name: checkout  # Name of the step
      image: bitnami/git:latest  # Docker image to use in this step (Git)
      command: [git]  # The command to run in the container
      args: ["clone", "--branch", "$(params.branch)", "$(params.repo-url)"]  # Arguments to the git command to clone a specific branch from the given repo URL

    # Define some mock steps to simulate the rest of the CI/CD process using the echo task  
    - name: lint
      taskRef:
        name: echo
      params:
      - name: message
        value: "Calling Flake8 linter..."
      runAfter:
        - clone

    - name: tests
      taskRef:
        name: echo
      params:
      - name: message
        value: "Running unit tests with PyUnit..."
      runAfter:
        - lint

    - name: build
      taskRef:
        name: echo
      params:
      - name: message
        value: "Building image for $(params.repo-url) ..."
      runAfter:
        - tests

    - name: deploy
      taskRef:
        name: echo
      params:
      - name: message
        value: "Deploying $(params.branch) branch of $(params.repo-url) ..."